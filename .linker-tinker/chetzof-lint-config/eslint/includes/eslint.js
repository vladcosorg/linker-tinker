// @ts-check
const { defineConfig } = require('eslint-define-config')

module.exports = defineConfig({
  extends: ['eslint:recommended'],
  rules: {
    'no-await-in-loop': 'error',
    'no-self-compare': 'error',
    'no-constructor-return': 'error',
    'no-new-native-nonconstructor': 'error',
    'no-constant-condition': 'warn',
    'no-promise-executor-return': 'warn',
    'no-unreachable-loop': 'warn',
    'no-unused-private-class-members': 'warn',
    'no-use-before-define': 'warn',
    'arrow-body-style': ['warn', 'as-needed'],
    camelcase: ['warn'],
    complexity: ['warn'],
    curly: ['warn'],
    'dot-notation': ['warn'],
    'class-methods-use-this': 'warn',
    eqeqeq: 'warn',
    'grouped-accessor-pairs': 'warn',
    'func-style': ['error', 'declaration', { allowArrowFunctions: true }],
    'consistent-return': 'warn',
    'default-case': 'warn',
    'default-case-last': 'warn',
    'default-param-last': 'warn',
    'consistent-this': ['error', 'that'],
    'guard-for-in': 'warn',
    'logical-assignment-operators': 'warn',
    'new-cap': 'warn',
    'no-alert': 'warn',
    'no-array-constructor': 'error',
    'no-confusing-arrow': 'warn',
    'no-console': 'warn',
    'no-else-return': 'warn',
    'no-empty-function': 'warn',
    'no-extend-native': 'warn',
    'no-implicit-coercion': 'warn',
    'no-lonely-if': 'warn',
    'no-multi-assign': 'warn',
    'no-negated-condition': 'warn',
    'no-nested-ternary': 'warn',
    'no-return-await': 'warn',
    'no-shadow': 'warn',
    'no-throw-literal': 'warn',
    'no-unneeded-ternary': 'warn',
    'no-unused-expressions': 'warn',
    'no-useless-catch': 'warn',
    'no-useless-return': 'warn',
    'no-var': 'error',
    'object-shorthand': 'warn',
    'prefer-arrow-callback': 'warn',
    'prefer-const': 'warn',
    'prefer-object-has-own': 'warn',
    'prefer-object-spread': 'warn',
    'prefer-template': 'warn',
    'quote-props': ['warn', 'as-needed'],
    'require-await': 'warn',
    'no-void': ['error', { allowAsStatement: true }],
  },
  overrides: [
    {
      files: ['*.test.ts'],
      rules: {
        'no-unused-expressions': 'off',
      },
    },
  ],
})
